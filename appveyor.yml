version: "v0.0.26.{build}"

cache:
  - ..\other_source
# Clean cached
# https://www.appveyor.com/docs/build-cache/#cleaning-up-cache

environment:
  RabbitRemoteControlVersion: v0.0.26
  STOREPASS:
    secure: l9BZEU39F1a4vSkhwl0CHR+yh6CD1c7byGzMv+1NUa4=
  QT_USER:
    secure: EoBPaPuJ6u9UDYpQWjKhUg==
  QT_PASSWORD:
    secure: ejAYGgB+3sBispRxUSr0xw==
  APPVEYOR_RDP_PASSWORD:
    secure: PUmp7039ro52579dlxAk59tjpeeyiFbdWvHfLCkjF5c=

  matrix:
  ##### msvc 2015 ######## 
  - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
    GENERATORS: "Visual Studio 14 2015"
    TOOLCHAIN_VERSION: 14
    VCPKG_PLATFORM_TOOLSET: v140
    QT_ROOT: C:\Qt\5.6\msvc2015
    BUILD_ARCH: x86

  - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
    GENERATORS: "Visual Studio 14 2015 Win64"
    TOOLCHAIN_VERSION: 14
    QT_ROOT: C:\Qt\5.6\msvc2015_64
    BUILD_ARCH: x64

matrix:
  fast_finish: false

init:
  - set varch=%BUILD_ARCH%
  - if "%BUILD_ARCH%" == "x64" set varch=amd64
  - if %TOOLCHAIN_VERSION% LSS 15 (call "C:\Program Files (x86)\Microsoft Visual Studio %TOOLCHAIN_VERSION%.0\VC\vcvarsall.bat" %varch%) else (call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build\vcvarsall.bat" %varch%)  
  - echo NUMBER_OF_PROCESSORS=%NUMBER_OF_PROCESSORS%
  - echo PROCESSOR_IDENTIFIER=%PROCESSOR_IDENTIFIER%
  - if NOT "%QT_ROOT%" == "NO" for /f "delims=" %%i in ('%QT_ROOT%/bin/qmake -query QT_VERSION') do (set QT_VERSION=%%i)
  - echo QT_ROOT=%QT_ROOT%
  - echo QT_VERSION=%QT_VERSION%

install:
  - git submodule update --init --recursive
  - cd %APPVEYOR_BUILD_FOLDER%
  - git clone https://github.com/KangLin/RabbitCommon.git
  - set RabbitCommon_DIR=%APPVEYOR_BUILD_FOLDER%/RabbitCommon

  - set OTHER_SOURCE=%APPVEYOR_BUILD_FOLDER%\..\other_source
  - set INSTALL_DIR=%OTHER_SOURCE%\install_dir
  - if not exist "%OTHER_SOURCE%" ( mkdir "%OTHER_SOURCE%" )
  - if not exist "%INSTALL_DIR%" (mkdir "%INSTALL_DIR%")

  - cd %OTHER_SOURCE%
  - set CMAKE_VERSION=3.28.3
  - if not exist cmake-%CMAKE_VERSION%-windows-i386 (curl -fsSL -o cmake-%CMAKE_VERSION%-windows-i386.zip https://github.com/Kitware/CMake/releases/download/v%CMAKE_VERSION%/cmake-%CMAKE_VERSION%-windows-i386.zip && 7z x cmake-%CMAKE_VERSION%-windows-i386.zip)
  - cd cmake-%CMAKE_VERSION%-windows-i386
  - set PATH="%CD%/bin";%PATH%

  - cd %OTHER_SOURCE%
  - set VCPKG_DIR=%OTHER_SOURCE%\vcpkg
  - if not exist %VCPKG_DIR% (
       git clone "https://github.com/microsoft/vcpkg.git"
       cd "%VCPKG_DIR%"
       git checkout -b a1a1cbc975abf909a6c8985a6a2b8fe20bbd9bd6 a1a1cbc975abf909a6c8985a6a2b8fe20bbd9bd6
       bootstrap-vcpkg.bat)
  - vcpkg --triplet %BUILD_ARCH%-windows install zlib openssl libpng pixman libjpeg-turbo freerdp

before_build:
#  - cd "%OTHER_SOURCE%"
#  - if not exist FreeRDP (git clone https://github.com/FreeRDP/FreeRDP.git)
#  - cd FreeRDP
#  - git checkout -b 1da0d63c7850275dd56a59749f51a60cf6eaabd6 1da0d63c7850275dd56a59749f51a60cf6eaabd6
#  - git submodule update --init --recursive
#  - cmake -E make_directory build
#  - cd build
#  - cmake .. -G"%GENERATORS%" -DCMAKE_BUILD_TYPE=Release -DWITH_SERVER=ON -DCHANNEL_URBDRC=OFF -DCMAKE_INSTALL_PREFIX="%INSTALL_DIR%" -DCMAKE_TOOLCHAIN_FILE="%VCPKG_DIR%/scripts/buildsystems/vcpkg.cmake"
#  - cmake --build . --config Release
#  - cmake --build . --config Release --target install

#  - cd "%OTHER_SOURCE%"
#  - if not exist libdatachannel (git clone https://github.com/paullouisageneau/libdatachannel.git)
#  - cd libdatachannel
#  - git submodule update --init --recursive
#  - git checkout -b v0.14.3 v0.14.3
#  - cmake -E make_directory build
#  - cd build
#  - cmake .. -G"%GENERATORS%" -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX="%INSTALL_DIR%" -DCMAKE_TOOLCHAIN_FILE="%VCPKG_DIR%/scripts/buildsystems/vcpkg.cmake"
#  - cmake --build . --config Release --target install
#  #- if NOT "%TOOLCHAIN_VERSION%" == "14" (cmake --build . --config Release --target install)
 
  - cd "%OTHER_SOURCE%"
  - if not exist libvncserver (git clone "https://github.com/KangLin/libvncserver.git")
  - cd libvncserver
  - cmake -E make_directory build
  - cd build
  - cmake .. -G"%GENERATORS%" -DCMAKE_BUILD_TYPE=Release -DWITH_OPENSSL=ON -DWITH_GCRYPT=OFF -DBUILD_TESTS=OFF -DBUILD_EXAMPLES=OFF -DCMAKE_INSTALL_PREFIX="%INSTALL_DIR%" -DCMAKE_TOOLCHAIN_FILE="%VCPKG_DIR%/scripts/buildsystems/vcpkg.cmake"
  - cmake --build . --config Release
  - cmake --build . --config Release --target install

#  - cd "%OTHER_SOURCE%"
#  - if not exist tigervnc (git clone https://github.com/KangLin/tigervnc.git)
#  - cd tigervnc
#  - cmake -E make_directory build
#  - cd build
#  - cmake .. -G"%GENERATORS%" -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX="%INSTALL_DIR%" -DBUILD_TESTS=OFF -DBUILD_VIEWER=OFF -DENABLE_NLS=OFF -DCMAKE_TOOLCHAIN_FILE="%VCPKG_DIR%/scripts/buildsystems/vcpkg.cmake"
#  - cmake --build . --config Release
#  - cmake --build . --config Release --target install

  #- cd "%OTHER_SOURCE%"
  #- if not exist qxmpp (git clone -b v1.4.0 https://github.com/qxmpp-project/qxmpp.git)
  #- cd qxmpp
  #- cmake -E make_directory build
  #- cd build
  #- cmake .. -G"%GENERATORS%" -DQT_DIR=%QT_ROOT%/lib/cmake/Qt5 -DQt5_DIR=%QT_ROOT%/lib/cmake/Qt5 -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX="%INSTALL_DIR%" -DCMAKE_TOOLCHAIN_FILE="%VCPKG_DIR%/scripts/buildsystems/vcpkg.cmake"
  #- cmake --build . --config Release
  #- cmake --build . --config Release --target install

  #- cd "%OTHER_SOURCE%"
  #- if not exist qt-solutions (git clone https://github.com/KangLin/qt-solutions.git)
  #- cd qt-solutions/qtservice
  #- cmake -E make_directory build
  #- cd build
  #- cmake .. -G"%GENERATORS%" -DQT_DIR=%QT_ROOT%/lib/cmake/Qt5 -DQt5_DIR=%QT_ROOT%/lib/cmake/Qt5 -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX="%INSTALL_DIR%" -DCMAKE_TOOLCHAIN_FILE="%VCPKG_DIR%/scripts/buildsystems/vcpkg.cmake"
  #- cmake --build . --config Release
  #- cmake --build . --config Release --target install

build_script:
  - cd %APPVEYOR_BUILD_FOLDER%
  - mkdir build
  - cd build
  - cmake %APPVEYOR_BUILD_FOLDER% ^
        -G"%GENERATORS%" ^
        -DCMARK_SHARED=OFF ^
        -DCMARK_TESTS=OFF ^
        -DCMARK_STATIC=ON ^
        -DQT_DIR=%QT_ROOT%/lib/cmake/Qt5 ^
        -DQt5_DIR=%QT_ROOT%/lib/cmake/Qt5 ^
        -DCMAKE_BUILD_TYPE=Release ^
        -DCMAKE_INSTALL_PREFIX="%cd%/install" ^
        -DCMAKE_PREFIX_PATH="%INSTALL_DIR%" ^
        -DCMAKE_TOOLCHAIN_FILE="%VCPKG_DIR%/scripts/buildsystems/vcpkg.cmake" ^
        -DX_VCPKG_APPLOCAL_DEPS_INSTALL=ON ^
        -DVCPKG_APPLOCAL_DEPS=ON ^
        -DLibVNCServer_DIR="%INSTALL_DIR%/lib/cmake/LibVNCServer" ^
        -Dtigervnc_DIR="%INSTALL_DIR%/lib/cmake" ^        
        -DBUILD_FREERDP=ON
        #-DLibDataChannel_DIR="%INSTALL_DIR%/share/cmake/LibDataChannel"
  - cmake --build . --config Release
  - cmake --build . --config Release --target install
  - echo "xcopy /Y %VCPKG_DIR%\installed\%BUILD_ARCH%-windows\bin\*.dll install\bin"
  - xcopy /Y %VCPKG_DIR%\installed\%BUILD_ARCH%-windows\bin\*.dll install\bin
  - xcopy /Y %INSTALL_DIR%\bin\*.dll install\bin
  - call "C:\Program Files (x86)\NSIS\makensis.exe" Install.nsi
  - rename RabbitRemoteControl_setup_%RabbitRemoteControlVersion%.exe ^
        RabbitRemoteControl_%RabbitRemoteControlVersion%_windows_xp_%BUILD_ARCH%_setup.exe

artifacts:
  - path: build\RabbitRemoteControl_$(RabbitRemoteControlVersion)_windows_xp_$(BUILD_ARCH)_setup.exe

  - path: build\install\
    name: RabbitRemoteControl_$(RabbitRemoteControlVersion)_windows_xp_$(BUILD_ARCH)
    type: zip

test: off

#See: https://www.appveyor.com/docs/deployment/github/
deploy:
  #provider: FTP 
  #protocol: sftp 
  #host: frs.sourceforge.net 
  #username: kl222,rabbitim
  #密码用这个加密 https://ci.appveyor.com/tools/encrypt
  #password:
  #  secure: 2WEtOQrdty3V3g0aEVvS3Q==
  #folder: pfs  #link pfs to /home/frs/project/r/ra/rabbitim
  #draft: false
  #active_mode: false
  #on:
    #branch: master

  - provider: GitHub
    # token : https://github.com/settings/tokens
    # password encrypt: https://ci.appveyor.com/tools/encrypt
    auth_token:
      secure: xk9mUybB/QLi8+bJobhnOJbuYFdnys9DVLXcOGtbVXnuIZwvKxxQCoFIyVnUf6PP
    #artifact:
    #draft: true
    #prerelease: true
    force_update: false
    on:
      TOOLCHAIN_VERSION: 14
      #QT_VERSION: 5.6.3
      BUILD_ARCH: x86
      appveyor_repo_tag: true        # deploy on tag push only
